local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\179\123","\114\157\85\84"),function(v42) if (v9(v42,2)==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1));return "";end end else local v104=v10(v8(v42,16));if v30 then local v112=v13(v104,v30);v30=nil;return v112;else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (v105==0) then v106=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v106-(v106%1) ;end end else local v107=0;local v108;while true do if (0==v107) then v108=2^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;v51=1;end if (1==v51) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==1) then v59=1;v60=(v31(v58,1,51 -31 ) * (2^(651 -(555 + 64)))) + v57 ;v56=2;end if (v56==3) then if (v61==(568 -(367 + 201))) then if (v60==(927 -(214 + 713))) then return v62 * 0 ;else v61=1;v59=0 + 0 ;end elseif (v61==2047) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (0==v56) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,952 -(857 + 74) ,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==1) then v65=v11(v27,v29,(v29 + v63) -(1 + 0) );v29=v29 + v63 ;v64=2;end if (v64==3) then return v14(v66);end if (v64==2) then v66={};for v113=1, #v65 do v66[v113]=v10(v9(v11(v65,v113,v113)));end v64=3;end if (v64==0) then v65=nil;if  not v63 then local v120=0;while true do if (v120==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=0;local v82;local v83;while true do if (0==v81) then v82=v32();v83=nil;v81=1;end if (v81==1) then if (v82==(1638 -(1523 + 114))) then v83=v32()~=(0 + 0) ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v72[v80]=v83;break;end end end v70[3]=v32();for v84=1 -0 ,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1)==0) then local v121=0;local v122;local v123;local v124;while true do if (v121==1) then v124={v33(),v33(),nil,nil};if (v122==0) then local v126=0;while true do if (v126==0) then v124[3]=v33();v124[4]=v33();break;end end elseif (v122==1) then v124[120 -(32 + 85) ]=v34();elseif (v122==2) then v124[3]=v34() -(2^16) ;elseif (v122==3) then local v303=0;while true do if (v303==0) then v124[3 + 0 ]=v34() -(2^16) ;v124[4]=v33();break;end end end v121=2;end if (v121==3) then if (v31(v123,3,3)==1) then v124[4]=v72[v124[4]];end v67[v84]=v124;break;end if (v121==0) then v122=v31(v86,2,1068 -(68 + 997) );v123=v31(v86,4,6);v121=1;end if (v121==2) then if (v31(v123,1,1)==(1 + 0)) then v124[2]=v72[v124[2]];end if (v31(v123,2,2)==(958 -(892 + 65))) then v124[3]=v72[v124[3]];end v121=3;end end end break;end end end for v87=1,v34() do v68[v87-1 ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v89=v77;local v90=v78;local v91=v79;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -(2 -1) ;local v98={};local v99={};for v109=0,v97 do if (v109>=v91) then v95[v109-v91 ]=v96[v109 + 1 ];else v99[v109]=v96[v109 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do v101=v89[v93];v102=v101[1];if (v102<=38) then if (v102<=18) then if (v102<=(14 -6)) then if (v102<=3) then if (v102<=(1 -0)) then if (v102==0) then local v136=0;local v137;while true do if (v136==0) then v137=v101[2];do return v21(v99,v137,v94);end break;end end else local v138=0;local v139;while true do if (v138==0) then v139=v101[352 -(87 + 263) ];v99[v139](v21(v99,v139 + 1 ,v101[3]));break;end end end elseif (v102==2) then local v140=v90[v101[3]];local v141;local v142={};v141=v18({},{[v7("\251\244\26\202\89\243\176","\200\164\171\115\164\61\150")]=function(v235,v236) local v237=0;local v238;while true do if (v237==0) then v238=v142[v236];return v238[1][v238[2]];end end end,[v7("\129\203\13\64\148\183\250\7\64\155","\227\222\148\99\37")]=function(v239,v240,v241) local v242=v142[v240];v242[1][v242[2]]=v241;end});for v244=1,v101[4] do local v245=0;local v246;while true do if (v245==0) then v93=v93 + 1 ;v246=v89[v93];v245=1;end if (v245==1) then if (v246[1]==59) then v142[v244-1 ]={v99,v246[183 -(67 + 113) ]};else v142[v244-1 ]={v75,v246[3]};end v98[ #v98 + 1 ]=v142;break;end end end v99[v101[2]]=v40(v140,v141,v76);else v93=v101[3];end elseif (v102<=5) then if (v102>4) then local v145=v101[2 + 0 ];local v146,v147=v92(v99[v145](v99[v145 + 1 ]));v94=(v147 + v145) -1 ;local v148=0;for v247=v145,v94 do v148=v148 + 1 ;v99[v247]=v146[v148];end else do return;end end elseif (v102<=6) then for v250=v101[2],v101[3] do v99[v250]=nil;end elseif (v102==(16 -9)) then local v255=0;local v256;local v257;local v258;while true do if (v255==0) then v256=v90[v101[3]];v257=nil;v255=1;end if (v255==2) then for v367=1,v101[4] do local v368=0;local v369;while true do if (1==v368) then if (v369[1]==59) then v258[v367-1 ]={v99,v369[11 -8 ]};else v258[v367-1 ]={v75,v369[3]};end v98[ #v98 + 1 ]=v258;break;end if (v368==0) then v93=v93 + 1 ;v369=v89[v93];v368=1;end end end v99[v101[2]]=v40(v256,v257,v76);break;end if (v255==1) then v258={};v257=v18({},{[v7("\12\109\91\248\253\54\74","\153\83\50\50\150")]=function(v370,v371) local v372=0;local v373;while true do if (v372==0) then v373=v258[v371];return v373[1][v373[2]];end end end,[v7("\98\73\125\25\100\162\67\89\115\107","\45\61\22\19\124\19\203")]=function(v374,v375,v376) local v377=0;local v378;while true do if (v377==0) then v378=v258[v375];v378[1][v378[2]]=v376;break;end end end});v255=2;end end elseif (v99[v101[954 -(802 + 150) ]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=13) then if (v102<=10) then if (v102>9) then local v149=0;local v150;local v151;while true do if (v149==1) then v99[v150 + (2 -1) ]=v151;v99[v150]=v151[v101[4]];break;end if (v149==0) then v150=v101[2];v151=v99[v101[3]];v149=1;end end else local v152=0;local v153;while true do if (v152==0) then v153=v101[2];v99[v153]=v99[v153]();break;end end end elseif (v102<=(19 -8)) then local v154=0;local v155;local v156;local v157;local v158;while true do if (v154==2) then for v338=v155,v94 do local v339=0;while true do if (v339==0) then v158=v158 + (998 -(915 + 82)) ;v99[v338]=v156[v158];break;end end end break;end if (v154==1) then v94=(v157 + v155) -(1 + 0) ;v158=0;v154=2;end if (v154==0) then v155=v101[2];v156,v157=v92(v99[v155](v99[v155 + 1 ]));v154=1;end end elseif (v102==12) then v99[v101[2]]=v101[8 -5 ];else v99[v101[2]]=v99[v101[3]][v101[4]];end elseif (v102<=15) then if (v102==14) then v99[v101[2]]= #v99[v101[2 + 1 ]];else local v160=0;local v161;while true do if (0==v160) then v161=v101[2];v99[v161](v21(v99,v161 + (1 -0) ,v94));break;end end end elseif (v102<=(1203 -(1069 + 118))) then do return;end elseif (v102==17) then v99[v101[2]]=v75[v101[6 -3 ]];else local v265=0;local v266;while true do if (v265==0) then v266=v101[2];v99[v266](v21(v99,v266 + 1 ,v101[3]));break;end end end elseif (v102<=28) then if (v102<=23) then if (v102<=20) then if (v102==19) then local v162=0;local v163;local v164;local v165;local v166;while true do if (0==v162) then v163=v101[3 -1 ];v164,v165=v92(v99[v163](v21(v99,v163 + 1 ,v94)));v162=1;end if (v162==1) then v94=(v165 + v163) -1 ;v166=0 + 0 ;v162=2;end if (v162==2) then for v340=v163,v94 do local v341=0;while true do if (v341==0) then v166=v166 + (1 -0) ;v99[v340]=v164[v166];break;end end end break;end end else v99[v101[2]]=v101[3 + 0 ];end elseif (v102<=21) then local v169=0;local v170;while true do if (v169==0) then v170=v101[2];v99[v170](v21(v99,v170 + (792 -(368 + 423)) ,v94));break;end end elseif (v102==22) then v99[v101[2]]();else local v267=0;local v268;while true do if (v267==0) then v268=v101[2];v99[v268]=v99[v268](v21(v99,v268 + 1 ,v101[3]));break;end end end elseif (v102<=(78 -53)) then if (v102==24) then local v171=0;local v172;while true do if (v171==0) then v172=v101[2];v99[v172]=v99[v172](v21(v99,v172 + 1 ,v94));break;end end else local v173=0;local v174;local v175;local v176;while true do if (v173==1) then v176=v99[v174] + v175 ;v99[v174]=v176;v173=2;end if (v173==0) then v174=v101[2];v175=v99[v174 + 2 ];v173=1;end if (v173==2) then if (v175>0) then if (v176<=v99[v174 + 1 ]) then v93=v101[3];v99[v174 + (21 -(10 + 8)) ]=v176;end elseif (v176>=v99[v174 + 1 ]) then local v386=0;while true do if (v386==0) then v93=v101[3];v99[v174 + 3 ]=v176;break;end end end break;end end end elseif (v102<=(99 -73)) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==27) then v99[v101[2]]=v76[v101[3]];else local v272=0;local v273;while true do if (v272==0) then v273=v101[444 -(416 + 26) ];do return v21(v99,v273,v94);end break;end end end elseif (v102<=33) then if (v102<=(95 -65)) then if (v102>29) then v99[v101[2]]=v101[3]~=0 ;else local v178=0;local v179;while true do if (v178==0) then v179=v101[2];v99[v179]=v99[v179](v21(v99,v179 + 1 ,v101[3]));break;end end end elseif (v102<=31) then v99[v101[2]][v99[v101[3]]]=v99[v101[4]];elseif (v102==32) then v99[v101[2]]=v99[v101[3]] + v101[4] ;else v99[v101[2]]=v76[v101[3]];end elseif (v102<=35) then if (v102>(15 + 19)) then v99[v101[2]]=v99[v101[3]][v101[4]];else local v184=0;local v185;local v186;local v187;local v188;while true do if (v184==2) then for v342=v185,v94 do local v343=0;while true do if (v343==0) then v188=v188 + (431 -(44 + 386)) ;v99[v342]=v186[v188];break;end end end break;end if (v184==1) then v94=(v187 + v185) -1 ;v188=438 -(145 + 293) ;v184=2;end if (v184==0) then v185=v101[2];v186,v187=v92(v99[v185](v21(v99,v185 + (1 -0) ,v101[3])));v184=1;end end end elseif (v102<=36) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[1489 -(998 + 488) ];end elseif (v102>37) then v99[v101[2]]=v75[v101[3]];elseif v99[v101[2]] then v93=v93 + 1 + 0 ;else v93=v101[3];end elseif (v102<=57) then if (v102<=47) then if (v102<=42) then if (v102<=40) then if (v102>39) then local v189=0;local v190;while true do if (v189==0) then v190=v101[2 + 0 ];do return v99[v190](v21(v99,v190 + 1 ,v101[775 -(201 + 571) ]));end break;end end else v93=v101[3];end elseif (v102>41) then local v192=0;local v193;local v194;local v195;while true do if (v192==1) then v195=v99[v193 + (1140 -(116 + 1022)) ];if (v195>0) then if (v194>v99[v193 + (4 -3) ]) then v93=v101[3];else v99[v193 + 3 ]=v194;end elseif (v194<v99[v193 + 1 + 0 ]) then v93=v101[3];else v99[v193 + 3 ]=v194;end break;end if (v192==0) then v193=v101[2];v194=v99[v193];v192=1;end end else v99[v101[7 -5 ]]={};end elseif (v102<=44) then if (v102==(152 -109)) then local v197=0;local v198;local v199;local v200;local v201;while true do if (2==v197) then for v345=v198,v94 do local v346=0;while true do if (0==v346) then v201=v201 + 1 ;v99[v345]=v199[v201];break;end end end break;end if (v197==1) then v94=(v200 + v198) -1 ;v201=0;v197=2;end if (v197==0) then v198=v101[2];v199,v200=v92(v99[v198](v21(v99,v198 + 1 ,v101[3])));v197=1;end end else local v202=v101[2];local v203=v99[v101[862 -(814 + 45) ]];v99[v202 + 1 ]=v203;v99[v202]=v203[v101[4]];end elseif (v102<=45) then v99[v101[2]]=v101[3]~=0 ;elseif (v102>46) then local v280=0;local v281;local v282;local v283;while true do if (v280==1) then v283=v99[v281 + 2 ];if (v283>0) then if (v282>v99[v281 + (2 -1) ]) then v93=v101[3];else v99[v281 + 3 ]=v282;end elseif (v282<v99[v281 + 1 ]) then v93=v101[3];else v99[v281 + 3 ]=v282;end break;end if (v280==0) then v281=v101[2];v282=v99[v281];v280=1;end end else v99[v101[2]]();end elseif (v102<=52) then if (v102<=49) then if (v102>48) then v99[v101[2]][v99[v101[3]]]=v101[4];else v99[v101[2]]= #v99[v101[1 + 2 ]];end elseif (v102<=50) then local v211=v101[2];v99[v211]=v99[v211](v21(v99,v211 + 1 ,v94));elseif (v102>51) then local v284=v101[2];do return v99[v284](v21(v99,v284 + 1 ,v101[2 + 1 ]));end else v99[v101[2]][v101[3]]=v101[889 -(261 + 624) ];end elseif (v102<=54) then if (v102>53) then v99[v101[3 -1 ]]=v99[v101[3]]%v101[4] ;else local v214=v101[2];local v215=v99[v214];for v252=v214 + 1 ,v94 do v15(v215,v99[v252]);end end elseif (v102<=55) then v99[v101[1082 -(1020 + 60) ]]=v40(v90[v101[1426 -(630 + 793) ]],nil,v76);elseif (v102==56) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v101[3] + v99[v101[13 -9 ]] ;end elseif (v102<=(317 -250)) then if (v102<=62) then if (v102<=59) then if (v102==58) then local v217=0;local v218;local v219;local v220;while true do if (v217==1) then v220=v99[v218] + v219 ;v99[v218]=v220;v217=2;end if (v217==2) then if (v219>0) then if (v220<=v99[v218 + 1 ]) then local v395=0;while true do if (v395==0) then v93=v101[3];v99[v218 + 3 ]=v220;break;end end end elseif (v220>=v99[v218 + 1 ]) then local v396=0;while true do if (v396==0) then v93=v101[3];v99[v218 + 3 ]=v220;break;end end end break;end if (0==v217) then v218=v101[2];v219=v99[v218 + 2 ];v217=1;end end else v99[v101[2]]=v99[v101[3]];end elseif (v102<=(24 + 36)) then v99[v101[2]]=v40(v90[v101[3]],nil,v76);elseif (v102==61) then v99[v101[2]][v99[v101[3]]]=v101[4];else v99[v101[2]][v101[3]]=v101[13 -9 ];end elseif (v102<=64) then if (v102>63) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else do return v99[v101[2]]();end end elseif (v102<=65) then v99[v101[1749 -(760 + 987) ]]=v99[v101[3]]%v99[v101[1917 -(1789 + 124) ]] ;elseif (v102>(832 -(745 + 21))) then local v293=0;local v294;local v295;while true do if (v293==1) then for v379=v294 + 1 ,v94 do v15(v295,v99[v379]);end break;end if (0==v293) then v294=v101[2];v295=v99[v294];v293=1;end end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=72) then if (v102<=69) then if (v102==(24 + 44)) then v99[v101[2]]=v99[v101[3]]%v101[10 -6 ] ;else v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;end elseif (v102<=70) then v99[v101[2]]=v99[v101[3]] + v101[15 -11 ] ;elseif (v102==71) then do return v99[v101[2]]();end else local v298=0;local v299;while true do if (v298==0) then v299=v101[2];v99[v299]=v99[v299]();break;end end end elseif (v102<=74) then if (v102>73) then local v228=0;local v229;local v230;local v231;local v232;while true do if (v228==0) then v229=v101[2];v230,v231=v92(v99[v229](v21(v99,v229 + 1 + 0 ,v94)));v228=1;end if (v228==1) then v94=(v231 + v229) -1 ;v232=0;v228=2;end if (2==v228) then for v348=v229,v94 do local v349=0;while true do if (v349==0) then v232=v232 + 1 ;v99[v348]=v230[v232];break;end end end break;end end else v99[v101[2]]=v101[3] + v99[v101[4 + 0 ]] ;end elseif (v102<=75) then for v253=v101[2],v101[3] do v99[v253]=nil;end elseif (v102>76) then v99[v101[2]]=v99[v101[3]];else v99[v101[2]]={};end v93=v93 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
